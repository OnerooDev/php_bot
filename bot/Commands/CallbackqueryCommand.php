<?php

namespace Longman\TelegramBot\Commands\SystemCommands;

use Longman\TelegramBot\Commands\SystemCommand;
use Longman\TelegramBot\Entities\Keyboard;
use Longman\TelegramBot\Entities\KeyboardButton;
use Longman\TelegramBot\Entities\InlineKeyboard;
use Longman\TelegramBot\Entities\InlineKeyboardButton;
use Longman\TelegramBot\Entities\InlineQuery\InlineQueryResultArticle;
use Longman\TelegramBot\Entities\InputMessageContent\InputTextMessageContent;
use Longman\TelegramBot\Request;

/**
 * Callback query command
 *
 * This command handles all callback queries sent via inline keyboard buttons.
 *
 * @see InlinekeyboardCommand.php
 */
class CallbackqueryCommand extends SystemCommand
{
    /**
     * @var string
     */
    protected $name = 'callbackquery';

    /**
     * @var string
     */
    protected $description = 'Reply to callback query';

    /**
     * @var string
     */
    protected $version = '1.1.1';

    /**
     * Command execute method
     *
     * @return \Longman\TelegramBot\Entities\ServerResponse
     * @throws \Longman\TelegramBot\Exception\TelegramException
     */
    public function execute() {
      //–ø—Ä–∏–Ω–∏–º–∞–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      $callback_query    = $this->getCallbackQuery();
      $callback_query_id = $callback_query->getId();
      $callback_data     = $callback_query->getData();

  		$message = $callback_query->getMessage();
  		$user    = $callback_query->getFrom();
  		$chat_id = $message->getChat()->getId();
  		$user_id = $user->getId();
      //–ø–æ–¥–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  		$this->config = new \Config();
      //–ø–æ–¥–∫–ª—é—á–∞–µ–º –±–¥
  		$mysqli = new \mysqli($this->config->host, $this->config->user, $this->config->password, $this->config->db);
      $mysqli->query("SET NAMES 'utf8'");

      $explode = explode(":", $callback_data);

//get_hello Begin|–ù–∞—á–∞–ª–æ
		  if($explode[0] == 'get_hello'){
        //–∏–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–¥
          $query = "SELECT * FROM `user` WHERE `id` = '".$user_id."'";
          $user_query = $mysqli->query($query);
          $user_array = $user_query->fetch_array();
        //—É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  				$message_to_edit = $message->getMessageId();
  				$data_edit = [
  					'chat_id'    => $chat_id,
  					'message_id' => $message_to_edit,
  				];
  				Request::deleteMessage($data_edit);

  				$text .= '–ù—É –ø—Ä–∏–≤–µ—Ç '.$user_array['first_name'].PHP_EOL;

          $inline_keyboard = new InlineKeyboard([

            new InlineKeyboardButton([
              'text'  => 'üóì–¢–∞–±–ª–∏—Ü–∞',
              'callback_data'     => 'get_Worktable'
            ])],
            [new InlineKeyboardButton([
              'text'  => 'üìã–ó–∞–¥–∞—á–∏',
              'callback_data' => 'go_to_task'
            ]),
            new InlineKeyboardButton([
              'text'  => 'üìÑ3logicWiki',
              'url' => 'http://wiki.3l.host'
            ]),
            new InlineKeyboardButton([
              'text'  => '‚òéÔ∏è–ö–æ–Ω—Ç–∞–∫—Ç—ã',
              'callback_data' => 'get_Contacts'
            ])],
            [new InlineKeyboardButton([
              'text'  => '‚Ü©Ô∏è–ù–∞–∑–∞–¥',
              'callback_data'	=> 'get_back:'
            ])
          ]);
        //–≤–Ω–æ—Å–∏–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
          $datas['text'] = $text;
          $datas['parse_mode'] = "MARKDOWN";
          $datas['chat_id'] = $chat_id;
          $datas['reply_markup'] = $inline_keyboard;

          return Request::sendMessage($datas);
      }
//get_hello end|–ö–æ–Ω–µ—Ü
//get_back Begin|–ù–∞—á–∞–ª–æ
      if($explode[0] == 'get_back'){
        //—É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  				$message_to_edit = $message->getMessageId();
  				$data_edit = [
  					'chat_id'    => $chat_id,
  					'message_id' => $message_to_edit,
  				];
  				Request::deleteMessage($data_edit);
        //
          $text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ 3Logic ".PHP_EOL;
          $text .= "‚úÖ–°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä –≤ –º–µ–Ω—é‚úÖ".PHP_EOL;

          $inline_keyboard = new InlineKeyboard([
        		new InlineKeyboardButton([
        			'text'  => '–ú–µ–Ω—é',
        			'callback_data'	=> 'get_hello:'
/**        		])],
*            [new InlineKeyboardButton([
*              'text'  =>  '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
*              'callback_data' =>  'get_item'
*            ])
**/      		])]);
          //–≤–Ω–æ—Å–∏–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            $datas['text'] = $text;
            $datas['parse_mode'] = "MARKDOWN";
            $datas['chat_id'] = $chat_id;
            $datas['reply_markup'] = $inline_keyboard;

            return Request::sendMessage($datas);
        }
//get_back end|–ö–æ–Ω–µ—Ü
//get_Contacts Begin|–ù–∞—á–∞–ª–æ
      if($explode[0] == 'get_Contacts'){
        $query = "SELECT * FROM `Contacts`";
        $all_contacts = $mysqli->query($query);
        $contacts_array = $all_contacts->fetch_array();
  //—É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
         $message_to_edit = $message->getMessageId();
         $data_edit = [
            'chat_id'    => $chat_id,
            'message_id' => $message_to_edit,
          ];
          Request::deleteMessage($data_edit);
        //
          $text = "–ö–æ–Ω—Ç–∞–∫—Ç—ã:".PHP_EOL;
        //  $text .= "<b>–°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä</b>".PHP_EOL;

        foreach ($all_contacts as $value) {
        $text .= $value ['name'] ."\n"
        ."–î–æ–ª–∂–Ω–æ—Å—Ç—å:" ." " .$value ['position'] ."\n"
        ."–ù–æ–º–µ—Ä:" ." " .$value ['number'] ."\n"
//        ."–ü–æ—á—Ç–∞:" ." " .$vaule ['email'] ."\n"
        ."–î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è:" ." " .$value ['birthday'] ."\n"
        .PHP_EOL;
        }

          $inline_keyboard = new InlineKeyboard([
/**        		new InlineKeyboardButton([
*        			'text'  => '–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–π –æ—Ç–¥–µ–ª',
*        			'callback_data'	=> 'get_Contacts'
*        		])],
*            [new InlineKeyboardButton([
*              'text'  =>  '–û—Ç–¥–µ–ª –°–±–æ—Ä–∫–∞',
*              'callback_data' =>  'get_Contacts'
*            ])],
*/            new InlineKeyboardButton([
              'text' => '‚Ü©Ô∏è–ù–∞–∑–∞–¥',
              'callback_data' => 'get_hello:'
            ])
      		]);
        //–≤–Ω–æ—Å–∏–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
          $datas['text'] = $text;
          $datas['parse_mode'] = "MARKDOWN";
          $datas['chat_id'] = $chat_id;
          $datas['reply_markup'] = $inline_keyboard;

          return Request::sendMessage($datas);
      };
//get_Contacts end|–ö–æ–Ω–µ—Ü
//get_Worktable Begin|–ù–∞—á–∞–ª–æ
      if($explode[0] == 'get_Worktable'){
        $query = "SELECT * FROM `Worktable`";
        $all_worktable = $mysqli->query($query);
        $worktable_array = $all_worktable->fetch_array();
  //—É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
         $message_to_edit = $message->getMessageId();
         $data_edit = [
            'chat_id'    => $chat_id,
            'message_id' => $message_to_edit,
          ];
          Request::deleteMessage($data_edit);
        //
          $text = "–¢–∞–±–ª–∏—Ü–∞:".PHP_EOL;
        //  $text .= "<b>–°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä</b>".PHP_EOL;
/**
*        foreach ($all_worktable as $value) {
*        $text .=
*        "–î–∞—Ç–∞ –ø–æ–µ–∑–¥–∫–∏:" ." " .$value ['Travel_date'] ."\n"
*        ."–ù–∞–∏–º–∏–Ω–æ–≤–∞–Ω–∏–µ –ó–∞–∫–∞–∑—á–∏–∫–∞:" ." " .$value ['Customer_name'] ."\n"
*        ."–ê–¥—Ä–µ—Å –ó–∞–∫–∞–∑—á–∏–∫–∞:" ." " .$value ['Customer_address'] ."\n"
*        ."–ö–æ–Ω—Ç–∞–∫—Ç—ã –ó–∞–∫–∞–∑—á–∏–∫–∞:" ." " .$vaule ['Customer_contacts'] ."\n"
*        ."–¶–µ–ª—å –ø–æ–µ–∑–¥–∫–∏ –∏–ª–∏ –Ω–æ–º–µ—Ä –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞:" ." " .$value ['Purpose_of_trip_or_incident_number'] ."\n"
*        ."–ù–∞–∏–º–∏–Ω–æ–≤–∞–Ω–∏–µ –∏ S/N –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è:" ." " .$value ['Equipment_name_and_S/N'] ."\n"
*        ."–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:" ." " .$value ['Quantity'] ."\n"
*        ."–§–ò–û –∏–Ω–∂–µ–Ω–µ—Ä–∞:" ." " .$value ['Full_name_of_engineer'] ."\n"
*        .PHP_EOL;
*        }
*/
          $inline_keyboard = new InlineKeyboard([
        		new InlineKeyboardButton([
        			'text'  => 'Google –¢–∞–±–ª–∏—Ü–∞',
        			'url'	=> 'https://docs.google.com/spreadsheets/d/1wQItHbu8jINUPGAiNtZ5nesTaftEL3elmEfKXE5-M8w/edit?usp=sharing'
        		])],
/**            [new InlineKeyboardButton([
*              'text'  =>  '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
*              'callback_data' =>  'get_Worktable'
*            ])],
*/            [new InlineKeyboardButton([
              'text' => '‚Ü©Ô∏è–ù–∞–∑–∞–¥',
              'callback_data' => 'get_hello:'
            ])
      		]);

        //–≤–Ω–æ—Å–∏–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
          $datas['text'] = $text;
          $datas['parse_mode'] = "MARKDOWN";
          $datas['chat_id'] = $chat_id;
          $datas['reply_markup'] = $inline_keyboard;

          return Request::sendMessage($datas);
      };
//get_Worktable end|–ö–æ–Ω–µ—Ü
//get_3lwiki Begin|–ù–∞—á–∞–ª–æ
      if($explode[0] == 'get_3lWiki'){
  //—É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
         $message_to_edit = $message->getMessageId();
         $data_edit = [
            'chat_id'    => $chat_id,
            'message_id' => $message_to_edit,
          ];
          Request::deleteMessage($data_edit);
        //
          $text = "3logicWiki".PHP_EOL;
        //  $text .= "<b>–°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä</b>".PHP_EOL;

          $inline_keyboard = new InlineKeyboard([
        		new InlineKeyboardButton([
        			'text'  => '3logicWiki',
        			'callback_data'	=> 'get_3lWiki'
        		])],
/**            [new InlineKeyboardButton([
*              'text'  =>  '',
*              'callback_data' =>  ''
*            ])],
*/            [new InlineKeyboardButton([
              'text' => '‚Ü©Ô∏è–ù–∞–∑–∞–¥',
              'callback_data' => 'get_hello:'
            ])
      		]);

        //–≤–Ω–æ—Å–∏–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
          $datas['text'] = $text;
          $datas['parse_mode'] = "MARKDOWN";
          $datas['chat_id'] = $chat_id;
          $datas['reply_markup'] = $inline_keyboard;

          return Request::sendMessage($datas);
      };
//get_3lwiki end|–ö–æ–Ω–µ—Ü
//go_to_task Begin|–ù–∞—á–∞–ª–æ
      if($explode[0] == 'go_to_task'){
         $message_to_edit = $message->getMessageId();
         $data_edit = [
            'chat_id'    => $chat_id,
            'message_id' => $message_to_edit,
          ];
          Request::deleteMessage($data_edit);

          $text = "–°–æ–∑–¥–∞–π –º–µ–Ω—è :)".PHP_EOL;

          $inline_keyboard = new InlineKeyboard([
        		new InlineKeyboardButton([
        			'text'  => 'üñç–°–æ–∑–¥–∞—Ç—å –ó–∞–¥–∞—á—É',
        			'callback_data'	=> 'Create_a_task'
        		])],
            [new InlineKeyboardButton([
              'text'  =>  'üìãüóì–ú–æ–∏ –°–µ–≥–æ–¥–Ω—è',
              'callback_data' =>  'get_Task'
            ]),
            new InlineKeyboardButton([
              'text'  =>  'üìãüóì–ú–æ–∏ –í—Å–µ',
              'callback_data' =>  'get_Task_All'
            ])],
            [new InlineKeyboardButton([
              'text' => '‚Ü©Ô∏è–ù–∞–∑–∞–¥',
              'callback_data' => 'get_hello:'
            ])
      		]);

          $datas['text'] = $text;
          $datas['parse_mode'] = "MARKDOWN";
          $datas['chat_id'] = $chat_id;
          $datas['reply_markup'] = $inline_keyboard;

          return Request::sendMessage($datas);
      };
//end|–ö–æ–Ω–µ—Ü
//Menu Create_a_task –Ω–∞—á–∞–ª–æ
          if($explode[0] == 'Create_a_task'){
            $query = "SELECT * FROM `user` WHERE `id` = '".$user_id."'";
            $user_query = $mysqli->query($query);
            $user_array = $user_query->fetch_array();
          $message_to_edit = $message->getMessageId();
          $data_edit = [
            'chat_id'    => $chat_id,
            'message_id' => $message_to_edit,
          ];
          Request::deleteMessage($data_edit);
          $text = "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏.".PHP_EOL;
          $text .= "–ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –°–æ–∑–¥–∞—Ç—å.".PHP_EOL;
          $text .= "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –ø–æ–ª–µ - –ó–∞–≥–æ–ª–æ–≤–æ–∫.".PHP_EOL;
          $text .= "üî∏–ó–∞–≥–æ–ª–æ–≤–æ–∫:".PHP_EOL;
          $text .= "üî∏–ß–∞—Ç:".PHP_EOL;
          $text .= 'üî∏–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: '.$user_array['first_name'].PHP_EOL;
          $text .= "üî∏–°—Ä–æ–∫:".PHP_EOL;
          $text .= "üìú–û–ø–∏—Å–∞–Ω–∏–µ:".PHP_EOL;
          $inline_keyboard = new InlineKeyboard([
        		new InlineKeyboardButton([
        			'text'  => 'üü†–ó–∞–≥–æ–ª–æ–≤–æ–∫',
        			'callback_data'	=> 'get_header'
            ])],
              [new InlineKeyboardButton([
                'text'  =>  'üü†–û–ø–∏—Å–∞–Ω–∏–µ',
                'callback_data' =>  'get_description'
              ]),
              new InlineKeyboardButton([
                'text'  =>  'üü†–°—Ä–æ–∫',
                'callback_data' =>  'get_item'
              ])],
              [new InlineKeyboardButton([
                'text'  =>  'üü†–ß–∞—Ç',
                'callback_data' =>  'get_group'
              ]),
              new InlineKeyboardButton([
                'text'  =>  'üü†–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å',
                'callback_data' =>  'get_item'
              ])],
              [new InlineKeyboardButton([
                'text'  =>  '‚úÖ–°–æ–∑–¥–∞—Ç—å',
                'callback_data' =>  'get_item'
              ])],
              [new InlineKeyboardButton([
                'text' => '‚Ü©Ô∏è–ù–∞–∑–∞–¥',
                'callback_data' => 'go_to_task:'
              ]),
              new InlineKeyboardButton([
                'text'  =>  'üóë–û—á–∏—Å—Ç–∏—Ç—å',
                'callback_data' =>  'get_item'
              ])]);

              $datas['text'] = $text;
              $datas['parse_mode'] = "MARKDOWN";
              $datas['chat_id'] = $chat_id;
              $datas['reply_markup'] = $inline_keyboard;

              return Request::sendMessage($datas);
          };
//Menu Create_a_task end|–ö–æ–Ω–µ—Ü
//button get_header Begin|–ù–∞—á–∞–ª–æ
          if($explode[0] == 'get_header'){
          $query = "SELECT * FROM `Create_Task`";
          $task_Table = $mysqli->query($query);
          $tasktable_array = $task_Table->fetch_array();
          $message_to_edit = $message->getMessageId();
          $data_edit = [
            'chat_id'    => $chat_id,
            'message_id' => $message_to_edit,
          ];
          Request::deleteMessage($data_edit);
          $text = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫:".PHP_EOL;






          $datas['text'] = $text;
          $datas['parse_mode'] = "MARKDOWN";
          $datas['chat_id'] = $chat_id;
          $datas['reply_markup'] = $inline_keyboard;

          return Request::sendMessage($datas);
      };
//button get_header end|–ö–æ–Ω–µ—Ü
//button get_description Begin|–ù–∞—á–∞–ª–æ
          if($explode[0] == 'get_description'){
          $query = "SELECT * FROM `Create_Task`";
          $task_Table = $mysqli->query($query);
          $tasktable_array = $task_Table->fetch_array();
          $message_to_edit = $message->getMessageId();
          $data_edit = [
            'chat_id'    => $chat_id,
            'message_id' => $message_to_edit,
          ];
          Request::deleteMessage($data_edit);
          $text = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ:".PHP_EOL;






          $datas['text'] = $text;
          $datas['parse_mode'] = "MARKDOWN";
          $datas['chat_id'] = $chat_id;
          $datas['reply_markup'] = $inline_keyboard;

          return Request::sendMessage($datas);
        };
//button get_description end|–ö–æ–Ω–µ—Ü
//button get_group Begin|–ù–∞—á–∞–ª–æ
          if($explode[0] == 'get_group'){

          $message_to_edit = $message->getMessageId();
          $data_edit = [
            'chat_id'    => $chat_id,
            'message_id' => $message_to_edit,
          ];
          Request::deleteMessage($data_edit);
          $text = "–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç:".PHP_EOL;






          $datas['text'] = $text;
          $datas['parse_mode'] = "MARKDOWN";
          $datas['chat_id'] = $chat_id;
          $datas['reply_markup'] = $inline_keyboard;

          return Request::sendMessage($datas);
        };
//button get_group end|–ö–æ–Ω–µ—Ü
        $data = [
  			'chat_id'      => $chat_id,
  			'parse_mode'   => 'MARKDOWN',
  			'text'         => $text,
  			'reply_markup' => $inline_keyboard,
  		];

  		return Request::sendMessage($data);
    }

}



// –ó–∞–º–µ—Ç–∫–∏
            //$inline_keyboard->addRow(
            //–ú–∞—Å–∏–≤, –ø—Ä–∏–º–µ—Ä $a = AddRow(1, 2, 3, 4, 5); print_f($a);
            // –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∞
            //[1, 2, 3, 4, 5]

/**            new InlineKeyboardButton([
*              'text'  => '–ß–∞—Ç',
*              'url'     => 'https://t.me/joinchat/IDrw6HcS-ak0ZmEy'
*            ]),
*/
//            new InlineKeyboardButton([
//              'text'  => 'Item',
//              'callback_data'	=> 'get_item:'
//            ]),
